events {
  worker_connections 512;
  use epoll;
}
http {
  server_tokens off;

  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options nosniff;
  add_header Referrer-Policy no-referrer-when-downgrade;
  add_header Feature-Policy 'sync-xhr self;';

  gzip on;
  gzip_types text/css application/javascript application/json application/octet-stream;

  # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # modern cihper configuration.
  ssl_protocols TLSv1.3 TLSv1.2;
  ssl_ciphers 'TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-256-GCM-SHA384:TLS13-AES-128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256'; #:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_ecdh_curve secp521r1:secp384r1;
  ssl_prefer_server_ciphers on;

  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  add_header Strict-Transport-Security max-age=15768000;

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;

  resolver 8.8.8.8 [2620:fe::fe] valid=30s ipv6=on;

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    # Let's Encrypt Verification
    location ^~ /.well-known/acme-challenge/ {
      default_type "text/plain";
      root /var/www/html;
    }
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 80;
    listen [::]:80;
    server_name trijn.tyo.yuriko.co.nz; # for Mailu LetsEncrypt

    location / {
      proxy_pass http://mailu_front/;
    }
  }

  server {
    listen 80;
    listen [::]:80;
    server_name search.yuriko.co.nz;

    location / {
      proxy_pass http://psqlalbum/search/;
    }
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name openvpn.yuriko.co.nz;

    ssl_certificate /etc/letsencrypt/live/yuriko.co.nz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yuriko.co.nz/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/yuriko.co.nz/fullchain.pem;

    location / {
      proxy_pass http://psqlalbum/openvpn/;
    }
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ipsec.yuriko.co.nz;

    ssl_certificate /etc/letsencrypt/live/yuriko.co.nz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yuriko.co.nz/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/yuriko.co.nz/fullchain.pem;

    location / {
      proxy_pass http://psqlalbum/ipsec/;
    }
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ichikawayukko.mydns.jp;

    ssl_certificate /etc/letsencrypt/live/yuriko.co.nz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yuriko.co.nz/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/yuriko.co.nz/fullchain.pem;

    return 301 https://yuriko.co.nz$request_uri;
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name mail.yuriko.co.nz;

    ssl_certificate /etc/letsencrypt/live/yuriko.co.nz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yuriko.co.nz/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/yuriko.co.nz/fullchain.pem;

    location /webmail/ {
      proxy_pass http://mailu_front/webmail/;
    }
    location /admin/ {
      proxy_pass http://mailu_front/admin/;
    }
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name yuriko.co.nz ipv6.yuriko.co.nz;

    client_max_body_size 20M;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_max_temp_file_size 0;

    ssl_certificate /etc/letsencrypt/live/yuriko.co.nz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yuriko.co.nz/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/yuriko.co.nz/fullchain.pem;

    location / {
      proxy_pass http://psqlalbum/;
    }
    location /w/ {
      proxy_pass http://wiki/;
    }
  }
}
